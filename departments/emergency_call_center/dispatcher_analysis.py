# -*- coding: utf-8 -*-
"""dispatcher_analysis.ipynb

Automatically generated by Colab.
"""

import pandas as pd
import numpy as np
import plotly.express as px
import plotly.graph_objects as go

path= 'case_reports/europe/'

excel_jul= pd.ExcelFile(r"C:\Users\mkaya\OneDrive\Masaüstü\istanbul112_hidden\data\case_reports\europe\2025\monthly\3- MART 2025 AVR ASOS TANI DÖNÜŞTÜRÜLMÜŞ DEFTER.xlsx")

df9 = {sheet_name: excel_jul.parse(sheet_name) for sheet_name in excel_jul.sheet_names}

dataframe= df9['MART 2025-29.153']


dataframe['value']= 1

df= dataframe.copy()



# Commented out IPython magic to ensure Python compatibility.
# %run find_district.py

df= find_district(df)

df['VAKA VERILIS TARIH SAAT']= df['VAKA VERILIS\nTARIHI'] + ' ' + df['VAKA VERILIS\nSAATI']
df['VAKA CIKIS TARIH SAAT'] = df['VAKAYA CIKIS TARIHI'] + ' '+ df['VAKAYA CIKIS SAATI']
df['OLAY YER VARIS TARIH SAAT']= df['OLAY YERI VARIS TARIHI'] + ' ' + df['OLAY YERI VARIS SAATI']



def to_datetime(row):
  try:
    return pd.to_datetime(row, format= '%d-%m-%Y %H:%M:%S')
  except:
    try:
      return pd.to_datetime(row, format= '%Y-%m-%d %H:%M:%S')
    except:
      return '-'
df['VAKA VERILIS TARIH SAAT'] = df['VAKA VERILIS TARIH SAAT'].apply(to_datetime)
df['VAKA CIKIS TARIH SAAT'] = df['VAKA CIKIS TARIH SAAT'].apply(to_datetime)
df['OLAY YER VARIS TARIH SAAT'] = df['OLAY YER VARIS TARIH SAAT'].apply(to_datetime)

df['hour']= df['VAKA VERILIS TARIH SAAT'].dt.hour

df['IHBAR VEREN']

all_data= df.groupby(['IHBAR VEREN']).agg({'VALUE':'sum'}).reset_index()

all_data.head()

df['IHBAR VEREN']= df['IHBAR VEREN'].str.strip()

all_data= df.groupby(['IHBAR VEREN'])[['VALUE', 'MANUEL SEF TARIHI']].agg({'VALUE': 'sum', 'MANUEL SEF TARIHI': 'nunique'}).reset_index()
all_data['ORTALAMA']= (all_data['VALUE']/all_data['MANUEL SEF TARIHI']).round(2)
all_data= all_data.sort_values('ORTALAMA', ascending= False).reset_index(drop= True)

all_data['IHBAR VEREN']= all_data['IHBAR VEREN'].str.strip()

hourly_work= df.groupby(['IHBAR VEREN', 'hour']).agg({'VALUE':'sum'}).reset_index()

df['SONUC'].unique()



wasted= df[df['SONUC'].str.contains('Görev İptali')]

wasted= wasted.groupby('IHBAR VEREN').agg({'VALUE':'sum'}).reset_index()
wasted['IHBAR VEREN']= wasted['IHBAR VEREN'].str.strip()

wasted



wasted.rename(columns= {'VALUE':'Görev İptali'}, inplace= True)

wasted_detailed= pd.merge(all_data, wasted, on= 'IHBAR VEREN', how= 'inner')

wasted_detailed

wasted= df[df['SONUC'].str.contains('Yaralı Yok|Nakil - Diğer|Başka Araçla Nakil|Asılsız İhbar|Diğer')]

wasted= wasted.groupby('IHBAR VEREN').agg({'VALUE':'sum'}).reset_index()
wasted['IHBAR VEREN']= wasted['IHBAR VEREN'].str.strip()
wasted.rename(columns= {'VALUE':'Yaralı Yok/Nakil - Diğer/Başka Araçla Nakil/Asılsız İhbar/Diğer'}, inplace= True)

wasted_detailed

wasted_detailed= pd.merge(wasted_detailed, wasted, on= 'IHBAR VEREN', how= 'left')

wasted_detailed['Görev İptali/TOPLAM Yüzdesi']= (wasted_detailed['Görev İptali']/wasted_detailed['VALUE']*100).round(2)
wasted_detailed['Diğer/TOPLAM Yüzdesi']= (wasted_detailed['Yaralı Yok/Nakil - Diğer/Başka Araçla Nakil/Asılsız İhbar/Diğer']/wasted_detailed['VALUE']*100).round(2)
wasted_detailed['Görev İptali-Diğer/TOPLAM Yüzdesi']= ((wasted_detailed['Görev İptali']+wasted_detailed['Yaralı Yok/Nakil - Diğer/Başka Araçla Nakil/Asılsız İhbar/Diğer'])/wasted_detailed['VALUE']*100).round(2)

wasted_detailed.fillna(0, inplace= True)

wasted_detailed.sort_values('Görev İptali-Diğer/TOPLAM Yüzdesi', ascending= False, inplace= True)

wasted_detailed.rename(columns={'VALUE':'TOPLAM','MANUEL SEF TARIHI':'Nöbet Sayısı'},inplace=True)

wasted_detailed.to_excel('dispatcher_analizi.xlsx', index= False)



